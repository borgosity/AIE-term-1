#include "Challenge.h"


Challenge::Challenge()
{
}

Challenge::Challenge(StringOO description, int difficulty)
{
	m_description = description;

	m_difficulty = difficulty;
}

Challenge::~Challenge()
{
}
/*******************************************************************************************************
*
*******************************************************************************************************/
const char * Challenge::GetDescription()
{
	return m_description.GetString();
}
/*******************************************************************************************************
*
*******************************************************************************************************/
const int Challenge::GetDifficulty()
{
	return m_difficulty;
}
/*******************************************************************************************************
*
*******************************************************************************************************/
const char * Challenge::GetType()
{
	return m_type;
}
/*******************************************************************************************************
*
*******************************************************************************************************/
const char *  Challenge::GetQuestion()
{
	return m_Question.GetString();
}
/*******************************************************************************************************
*
*******************************************************************************************************/
const char *  Challenge::GetAnswer()
{
	return m_Answer.GetString();
}
/*******************************************************************************************************
*
*******************************************************************************************************/
Enemy Challenge::GetEnemy()
{
	return m_Enemy;
}
/*******************************************************************************************************
*
*******************************************************************************************************/
void Challenge::SetDifficulty(int difficulty)
{
	m_difficulty = difficulty;
}
/*******************************************************************************************************
*
*******************************************************************************************************/
void Challenge::SetEnemy(Enemy & EnemyObj)
{
	m_Enemy = EnemyObj;
}
/*******************************************************************************************************
*
*******************************************************************************************************/
void Challenge::deleteString(const char * string)
{
	if (string != nullptr)
	{
		delete[] string;
		string = nullptr;
	}
}
